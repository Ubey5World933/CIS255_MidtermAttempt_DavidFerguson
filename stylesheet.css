
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    background-color: #1f1f1f;
    color: #ffffff;
    font-family: 'Fira Code', 'Arial', sans-serif;
}

nav {
    display: flex;
    justify-content: space-between;
    padding: 20px;
    background-color: #2a2a2a;
}

.logo {
    font-size: 1.5em;
    color: #fff;
}

.menu {
    list-style: none;
    display: flex;
    gap: 20px;
}

.menu li a {
    color: #bbb;
    text-decoration: none;
}

header {
    display: flex;
    justify-content: space-between;
    padding: 100px 20px;
}

.intro h1 {
    font-size: 2.5em;
}

.highlight { /* make whatever text or thing im selecting purple*/
    color: #c778dd;
}

.contact-button {
    margin-top: 20px;
    padding: 10px 20px;
    background-color: #c778dd;
    color: #fff;
    border: none;
}


.profile-img img {
    max-width: 200px;
    border-radius: 50%;
}

.quoter{ /* quote selector   */
    font-size: 1.25em; /* 1.25x Bigger font*/
    color: #c778dd;
    margin: auto;
}

#projects {
    padding: 50px 20px;
}

.project-grid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 20px;
}

.project-card {
    background-color: #2a2a2a;
    padding: 20px;
    border-radius: 10px;
}

.project-card button {
    margin-top: 10px;
    padding: 8px;
    background-color: #c778dd;
    color: #fff;
    border: none;
}

#skills {
    padding: 50px 20px;
}

.skills-grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 20px;
}

.skill-category h3 {
    color: #c778dd;
}

#about-me {
    padding: 50px 20px;
    background-color: #1f1f1f;
}

#contacts {
    padding: 50px 20px;
}

footer {
    padding: 20px;
    text-align: center;
    background-color: #1f1f1f;
}

.social-media a {
    margin: 0 10px;
    color: #c778dd;
    text-decoration: none;
}





    /* The grid container that holds all the cards */
    .grid-container {
        display: grid;
        /* Enables CSS Grid layout, which divides the container into rows and columns */
        grid-template-columns: repeat(3, minmax(200px, 1fr));
        /* 
          Creates 3 equal columns.
          repeat(3, ...) means repeat the column definition 3 times.
          minmax(200px, 1fr) means each column is at least 200px wide, but can grow to take up available space (1fr = 1 fraction of available space).
        */
        gap: 20px;
        /* Adds 20px space between the grid items (the cards) */
        padding: 20px;
        /* Adds 20px of space inside the grid container (between the edges of the container and its contents) */
      }
  
      /* Each card in the grid */
      .card {
        height: 100%;
        /* Ensures that the card takes up the full height available */
        box-sizing: border-box;
        /* 
          Makes sure padding and borders are included in the width and height calculation,
          preventing the card from overflowing its grid cell.
        */
      }
  
      /* General card styles */
      .card {
        background-color: lightgray;
        /* Sets the background color of the card to light gray */
        border-radius: 10px;
        /* Rounds the corners of the card with a 10px radius */
        padding: 20px;
        /* Adds 20px padding inside the card (space between the content and the card edges) */
        overflow: hidden;
        /* Prevents content from overflowing outside the card if it exceeds the card size */
      }
  
      /* Hide the content inside the cards initially */
      .card-content {
        transition: all 1s ease;
        /* Adds a smooth transition of 1 second when the content's visibility changes */
        opacity: 0;
        /* Sets the content's opacity to 0, effectively hiding it */
      }
  
      /* Show the content when the card is hovered over */
      .card:hover .card-content {
        opacity: 1;
        /* On hover, the content becomes fully visible with an opacity of 1 */
      }
  
      /* Specific styles for the 4th card, selected by its unique ID */
      #card4 {
        background-color: red;
        /* Sets the background color of the 4th card to red */
      }
  
      /* 
        Below are different layouts for the card content using various CSS techniques.
        Each card has a different way of organizing its content.
      */
  
      /* Card 1 - using a basic block layout (default) */
      #card1 .card-content {
        display: block;
        /* The default layout is block, where content is stacked vertically */
      }
  
      /* Card 2 - using a grid layout */
      #card2 .card-content {
        display: grid;
        /* Enables grid layout for the content */
        grid-template-columns: 1fr 1fr;
        /* Defines 2 equal-width columns inside the card */
        gap: 10px;
        /* Adds 10px of space between the grid items (the content inside the card) */
      }
  
      /* Card 3 - using float layout */
      #card3 .card-content div {
        float: left;
        /* Floats each div inside the card to the left */
        width: 50%;
        /* Each div takes up 50% of the width, making them sit side-by-side */
      }
  
      /* Card 4 - using flexbox layout */
      #card4 .card-content {
        display: flex;
        /* Enables flexbox layout for the content */
        justify-content: space-around;
        /* Distributes space evenly between the flex items, placing them with space around them */
      }
  
      /* Card 5 - using inline-block layout */
      #card5 .card-content div {
        display: inline-block;
        /* Treats each div as inline-block, meaning they behave like inline elements but respect width and height */
        margin-right: 10px;
        /* Adds 10px of space to the right of each inline-block element */
      }
  
      /* Card 6 - center-aligns text using an attribute selector */
      [data-type="text"] {
        text-align: center;
        /* Centers the text inside elements that have the attribute 'data-type="text"' */
      }
  
      /* Card 7 - using flexbox with column direction */
      #card7 .card-content {
        display: flex;
        /* Enables flexbox layout */
        flex-direction: column;
        /* Arranges flex items (content) in a column */
        gap: 10px;
        /* Adds 10px of space between the flex items */
        align-items: center;
        /* center the contents */
      }
  
      /* Card 9 - random margin between items */
      #card9 .card-content div {
        margin: 20px 30px
        /* Adds 5px of space below each div inside the card */
      }
  
      /* Media queries for responsive design */
      
      /* Media query for medium screens (max-width: 768px) */
      @media (max-width: 768px) {
        .grid-container {
          grid-template-columns: repeat(2, 1fr);
          /* Changes the grid to 2 columns on screens with a width of 768px or less */
        }
      }
  
      /* Media query for small screens (max-width: 480px) */
      @media (max-width: 480px) {
        .grid-container {
          grid-template-columns: 1fr;
          /* Changes the grid to 1 column on screens with a width of 480px or less */
        }
      }
    


      :root {
        --main-bg-color: #1e1e1e;
        --text-color: #ffffff;
        --box-bg-color: #2a2a2a;
        --accent-color: #8a2be2;
    }

    body {
        font-family: Arial, sans-serif;
        background-color: var(--main-bg-color);
        color: var(--text-color);
        margin: 0;
        padding: 20px;
    }

    .container {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 20px;
    }

    .project-box {
        background-color: var(--box-bg-color);
        border: 1px solid var(--accent-color);
        border-radius: 5px;
        padding: 15px;
    }

    .project-box img {
        max-width: 100%;
        height: auto;
    }

    h1, h2 {
        color: var(--accent-color);
    }

    a {
        color: var(--accent-color);
        text-decoration: none;
    }

    @media (max-width: 768px) {
        .container {
            grid-template-columns: 1fr;
        }
    }